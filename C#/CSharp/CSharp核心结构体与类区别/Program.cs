using System;

namespace CSharp核心结构体与类区别
{
    class Program
    {

        //结构体与类最大的区别时存储空间上的去别，结构体：值类型 栈   类：堆，引用类型
        //值类型与引用类型再赋值上的区别，值类型被赋值给新的变量后，新变量不会影响原来变量。而引用则因为指向同一地址会一同改变

        //结构体与类使用上类似，结构体甚至可以用面向对象思想来形容一类对象
        //结构体具有封装特性但不具备继承和多态，这是局限
        //因为不具备继承所有不能使用protected修饰




        //细节区别
        //1，值类型与引用类型
        //2，栈与堆
        //3，结构体不能protected修饰
        //4，结构体不能继承与多态
        //5，结构体成员变量申明时不能指定初始值（只能再构造方法内初始），而类什么时候都可以
        //6，结构体不能申明无参构成
        //7，结构体不能申明析构函数（垃圾回收那里了解就好）
        //8，结构体申明的有参构造不会把无参构造顶掉，而类会
        //9，结构体只能必须再有参构造中初始化所有的成员变量，类随意
        //10，结构体不能被静态修饰
        //11,结构体不能再自己内部申明自己类型的结构体变量，而类可以


        //特殊点:结构体不能继承，但是可以继承接口，接口时行为的抽象


        //如何选择结构体与类
        //继承与多态选类，比如：玩家与怪物等
        //对象时数据集合时优先结构体，比如位置，坐标
        //像坐标，向量，旋转等。都是重新赋值，但是不会改变原有的对象的，也就是值类型的赋值的特点



        //抽象类与接口区别？与java很像可以看看以前的

        //接口不能有成员变量






        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }
}
